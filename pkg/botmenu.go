package pkg

import (
	"fmt"
	"log"
	"medcalcbot/calculators"
	"medcalcbot/set"
	"reflect"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func TgBotCreate() {
	bot, _ := tgbotapi.NewBotAPI(BotApiKey())

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	bot.Debug = false
	log.Printf("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É - %s", bot.Self.UserName)
	updates := bot.GetUpdatesChan(u)
	warnings := new(Warning)
	descriptions := new(Description)
	admins := new(Admin)
	faqs := new(Faq)
	norms := new(Norms)
	recomends := new(Recomend)
	for update := range updates {
		if update.Message != nil {
			if reflect.TypeOf(update.Message.Text).Kind() == reflect.String && update.Message.Text != "" {
				switch update.Message.Text {
				case "/start":
					userName := update.Message.From.FirstName
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, "üëã –ü—Ä–∏–≤–µ—Ç "+userName+"\n"+warnings.ShowinBot(set.IntroductionInfo))
					bot.Send(msg)
				case "/help":
					//–û—Ç–ø—Ä–∞–≤–ª–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
					repl := warnings.ShowinBot(set.InfoText)
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, repl)
					bot.Send(msg)
				case "/calculators":
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã:")
					bot.Send(msg)
					calc := tgbotapi.NewMessage(update.Message.Chat.ID, update.Message.Text)
					calc.ReplyMarkup = set.Calculators
					bot.Send(calc)
				case "/recomendations":
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.FilesInfo))
					bot.Send(msg)
					for update := range updates {
						if update.Message != nil {
							x := recomends.Search(CheckRequest(update.Message.Text))
							prefix := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ReccomendPrefix)+" –ø–æ –∑–∞–ø—Ä–æ—Å—É - "+update.Message.Text+"\n---------\n")
							bot.Send(prefix)
							msg = tgbotapi.NewMessage(update.Message.Chat.ID, x)
							bot.Send(msg)
							break
						} else {
							msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É - "+update.Message.Text+"\nÔ∏è‚ùå –£–≤—ã, –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!\n---------\n")
							bot.Send(msg)
						}
					}
				case "/medconf": //TODO –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º –º–µ–¥–∏—Ü–∏–Ω—ã, –∞ –¥–∞–ª–µ–µ –∑–∞–ø—É—Å–∫–∞—é—â–∞—è —Å–∫—Ä–∞–ø–ø–∏–Ω–≥ –ø–æ —Å–∞–π—Ç—É –º–µ–¥–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–π –≤ –Ω—É–∂–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.UnderConstruction))
					bot.Send(msg)
				case "/settings": // –î–æ—Å—Ç—É–ø –∫–æ—Ç–æ—Ä—ã–º –≤ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º (–æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω –±–∞—Ç–æ–Ω—ã)
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, "üîê –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ / –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤\n–ù–∞–ø—Ä–∏–º–µ—Ä: admin/password")
					bot.Send(msg)
					for upd := range updates {
						msgIn := upd.Message.Text
						res := StringValuator(msgIn)
						if len(res) == 2 {
							bln := admins.Select(res[0], res[1])
							if bln != true {
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.BOT_ADMIN_ACCESS_BAD))
								bot.Send(msg)
								break
							} else {
								keys := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.BOT_WARNING_ADMIN_ACCESS))
								keys.ReplyMarkup = set.SettingsKeyboard
								bot.Send(keys)
								break
							}
						} else {
							msg.Text = warnings.ShowinBot(set.BOT_WARNING_ARGUMENTS_NOT_ENOUGH) + "2 –∑–Ω–∞—á–µ–Ω–∏—è"
							bot.Send(msg)
						}
					}
				default:
					x := CheckRequest(update.Message.Text)
					result := norms.Search(x)
					fmt.Println("\n–ß—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç X = ", x)
					prefix := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.NormsPrefix)+" –ø–æ –∑–∞–ø—Ä–æ—Å—É - "+update.Message.Text+"\n---------\n")
					bot.Send(prefix)
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, result)
					bot.Send(msg)
				}
			} else {
				//–û—Ç–ø—Ä–∞–≤–ª–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–∞—Ä—Ç–∏–Ω–∫—É –∏–ª–∏ —Å—Ç–∏–∫–µ—Ä
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, "üò•–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–æ–ª—å–∫–æ —Å–ª–æ–≤–∞!")
				bot.Send(msg)
			}
		} else if update.CallbackQuery != nil {
			callback := tgbotapi.NewCallback(update.CallbackQuery.ID, update.CallbackQuery.Data)
			if _, err := bot.Request(callback); err != nil {
				panic(err)
			}
			// –¢–£–¢ –ù–ê–ß–ò–ù–ê–ï–¢–°–Ø –†–ê–ë–û–¢–ê –° –û–°–ù–û–í–ù–´–ú–ò –†–ê–ó–î–ï–õ–ê–ú–ò
			switch update.CallbackQuery.Data {
			case "–ë–∞–∑–æ–≤—ã–π –æ–±–º–µ–Ω –≤–µ—â–µ—Å—Ç–≤": // –ì–û–¢–û–í–û
				msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, "üìü –í—ã–±—Ä–∞–Ω: "+update.CallbackQuery.Data)
				bot.Send(msg)
				info := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, descriptions.ShowinBot(set.BaseChangeText))
				bot.Send(info)
				msg = tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, faqs.ShowinBot(set.CaloryCalcInfo))
				bot.Send(msg)
				for update := range updates {
					if update.Message != nil {
						msgIn := update.Message.Text
						if msgIn != "–≤" {
							res := NumberValuator(msgIn)
							if len(res) < 5 {
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ErrorInput))
								bot.Send(msg)
							} else if len(res) > 5 {
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ErrorInput))
								bot.Send(msg)
							} else {
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, "üí¨–†–µ–∑—É–ª—å—Ç–∞—Ç:\n\n"+calculators.Bov(res[0], res[1], res[2], res[3], res[4])+"\n"+warnings.ShowinBot(set.CalcBackWarning))
								msg.ReplyToMessageID = update.Message.MessageID
								bot.Send(msg)
							}
						} else {
							msg := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ExitNoti))
							bot.Send(msg)
							break
						}
					}
				}
			case "–î–µ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–∏—è": // –ì–û–¢–û–í–û!
				msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, "üìü –í—ã–±—Ä–∞–Ω –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä: "+update.CallbackQuery.Data)
				bot.Send(msg)
				info := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, descriptions.ShowinBot(set.KaliumDefInfo))
				bot.Send(info)
				msg = tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, faqs.ShowinBot(set.KaliumCalcInfo))
				bot.Send(msg)
				for update := range updates {
					if update.Message != nil {
						msgIn := update.Message.Text
						if msgIn != "–≤" {
							res := NumberValuator(msgIn)
							if len(res) < 2 {
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ErrorInput))
								bot.Send(msg)
							} else if len(res) > 2 {
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ErrorInput))
								bot.Send(msg)
							} else {
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, "üí¨–†–µ–∑—É–ª—å—Ç–∞—Ç: \n"+calculators.KaliumDef(res[0], res[1])+"\n"+warnings.ShowinBot(set.CalcBackWarning))
								msg.ReplyToMessageID = update.Message.MessageID
								bot.Send(msg)
							}
						} else {
							msg := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ExitNoti))
							bot.Send(msg)
							break
						}
					}
				}
			case "–°–∫–æ—Ä–æ—Å—Ç—å –∫–ª—É–±–æ—á–∫–æ–≤–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏": // –ì–û–¢–û–í–û!
				msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, "üìü –í—ã–±—Ä–∞–Ω –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä: "+update.CallbackQuery.Data+warnings.ShowinBot(set.Tabulation)+descriptions.ShowinBot(set.SkfInfo)+warnings.ShowinBot(set.Tabulation)+faqs.ShowinBot(set.SkfCalcInfo))
				bot.Send(msg)
				for update := range updates {
					if update.Message != nil {
						msgIn := update.Message.Text
						if msgIn != "–≤" {
							res := NumberValuator(msgIn)
							if len(res) < 5 {
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ErrorInput))
								bot.Send(msg)
							} else if len(res) > 5 {
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ErrorInput))
								bot.Send(msg)
							} else {
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, "üí¨–†–µ–∑—É–ª—å—Ç–∞—Ç: \n"+calculators.Skf(res[0], res[1], res[2], res[3], res[4])+"\n"+warnings.ShowinBot(set.CalcBackWarning))
								msg.ReplyToMessageID = update.Message.MessageID
								bot.Send(msg)
							}
						} else {
							msg := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ExitNoti))
							bot.Send(msg)
							break
						}
					}
				}
			case "–°—Ä–µ–¥–Ω–µ–µ –ê–î": // –ì–û–¢–û–í–û!
				msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, "üìü –í—ã–±—Ä–∞–Ω –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä: "+update.CallbackQuery.Data)
				bot.Send(msg)
				info := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, descriptions.ShowinBot(set.MidADInfo))
				bot.Send(info)
				msg = tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, faqs.ShowinBot(set.MidADCalcInfo))
				bot.Send(msg)
				for update := range updates {
					if update.Message != nil {
						msgIn := update.Message.Text
						if msgIn != "–≤" {
							res := NumberValuator(msgIn)
							if len(res) < 2 {
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ErrorInput))
								bot.Send(msg)
							} else if len(res) > 2 {
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ErrorInput))
								bot.Send(msg)
							} else {
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, "üí¨–†–µ–∑—É–ª—å—Ç–∞—Ç: \n"+calculators.MidAD(res[0], res[1])+"\n"+warnings.ShowinBot(set.CalcBackWarning))
								msg.ReplyToMessageID = update.Message.MessageID
								bot.Send(msg)
							}
						} else {
							msg := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ExitNoti))
							bot.Send(msg)
							break
						}
					}
				}
			case "–ò–Ω–¥–µ–∫—Å –†–û–ú–ê": // –ì–û–¢–û–í–û!
				msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, "üìü –í—ã–±—Ä–∞–Ω –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä: "+update.CallbackQuery.Data)
				bot.Send(msg)
				info := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, descriptions.ShowinBot(set.RomaInfo))
				bot.Send(info)
				msg = tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, faqs.ShowinBot(set.RomaCalcInfo))
				bot.Send(msg)
				for update := range updates {
					if update.Message != nil {
						msgIn := update.Message.Text
						if msgIn != "–≤" {
							res := NumberValuator(msgIn)
							if len(res) < 3 {
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ErrorInput))
								bot.Send(msg)
							} else if len(res) > 3 {
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ErrorInput))
								bot.Send(msg)
							} else {
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, "üí¨–†–µ–∑—É–ª—å—Ç–∞—Ç: \n"+calculators.RomaIndex(res[0], res[1], res[2])+"\n"+warnings.ShowinBot(set.CalcBackWarning))
								//msg.ReplyToMessageID = update.Message.MessageID
								bot.Send(msg)
							}
						} else {
							msg := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ExitNoti))
							bot.Send(msg)
							break
						}
					}
				}
			case "–ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞": // –ì–û–¢–û–í–û!
				msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, "–í—ã–±—Ä–∞–Ω –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä: "+update.CallbackQuery.Data)
				bot.Send(msg)
				info := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, descriptions.ShowinBot(set.ImtInfo))
				bot.Send(info)
				msg = tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, faqs.ShowinBot(set.ImtCalcInfo))
				bot.Send(msg)
				for update := range updates {
					if update.Message != nil { // –ï—Å–ª–∏ –∫ –Ω–∞–º –ø–æ—Å—Ç—É–ø–∏–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
						msgIn := update.Message.Text
						if msgIn != "–≤" {
							res := NumberValuator(msgIn)
							if len(res) < 2 {
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ErrorInput))
								bot.Send(msg)
							} else if len(res) > 2 {
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ErrorInput))
								bot.Send(msg)
							} else {
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, "üí¨–†–µ–∑—É–ª—å—Ç–∞—Ç: \n"+calculators.Bmi(res[0], res[1])+"\n"+warnings.ShowinBot(set.CalcBackWarning))
								msg.ReplyToMessageID = update.Message.MessageID
								bot.Send(msg)
							}
						} else {
							msg := tgbotapi.NewMessage(update.Message.Chat.ID, warnings.ShowinBot(set.ExitNoti))
							bot.Send(msg)
							break
						}
					}
				}
			}
		}
	}
}
